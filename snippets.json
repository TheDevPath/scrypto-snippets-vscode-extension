{
  "Use Scrypto": {
    "prefix": "scrypto",
    "body": ["use scrypto::prelude::*;", "$1"],
    "description": "Import the Scrypto Library"
  },
  "Create Blueprint": {
    "prefix": "blueprint",
    "body": [
      "use scrypto::prelude::*;",
      "",
      "blueprint! { ",
      " struct ${1:BlueprintName} {",
      " }",
      "",
      " impl ${1:BlueprintName} {",
      "   pub fn ${2:new}() -> ComponentAddress {",
      "     Self {}",
      "     .instantiate()",
      "     .globalize()",
      "   }",
      " }",
      "}",
      "$0"
    ],
    "description": "Scaffold a Scrypto blueprint"
  },
  "Create Token": {
    "prefix": "token",
    "body": [
      "let ${1:token_name}: Bucket = ResourceBuilder::new_fungible()",
      "     .divisibility(DIVISIBILITY_MAXIMUM)",
      "     .metadata(\"name\", \"${2:Token Name}\")",
      "     .metadata(\"symbol\", \"${3:SYM}\")",
      "     .initial_supply($4);",
      "$0"
    ],
    "description": "Scaffold a fungible token"
  },
  "Create Fungible Badge": {
    "prefix": "badge",
    "body": [
      "let ${1:badge_name}: Bucket = ResourceBuilder::new_fungible()",
      "     .divisibility(DIVISIBILITY_NONE)",
      "     .metadata(\"name\", \"${2:Admin Badge}\")",
      "     .initial_supply(${3:1});",
      "$0"
    ],
    "description": "Scaffold a fungible badge"
  },
  "Struct Vault": {
    "prefix": "vault_struct",
    "body": ["${1:vault_name}: Vault,"],
    "description": "Scaffold a fungible badge"
  },
  "Vault Empty Constructor": {
    "prefix": "vault_empty",
    "body": ["${1:vault_name}: Vault::new(${2:empty_vault}),"],
    "description": "Scaffold a fungible badge"
  },
  "Vault w/Bucket Constructor": {
    "prefix": "vault_w_bucket",
    "body": ["${1:vault_name}: Vault::with_bucket(${2:bucket_name}),"],
    "description": "Scaffold a fungible badge"
  }
}
